6.1
1. DELIMITER $$
MariaDB [dbpos1]> CREATE PROCEDURE pro_naik(
    -> IN jenis_produk INT,
    -> IN persentasi_kenaikan INT )
    -> BEGIN
    -> UPDATE produk SET harga_jual = harga_jual + (harga_jual * persentasi_kenaikan / 100)
    -> WHERE jenis_produk_id = jenis_produk;
    -> END $$
DELIMITER ;
MariaDB [dbpos1]> CALL pro_naik(1,4); 
2. CREATE FUNCTION umur(tgl_lahir DATE)
     RETURNS INT
     BEGIN
     DECLARE umur INT;
     SET umur = YEAR(CURDATE()) - YEAR(tgl_lahir);
     RETURN umur;
     END $$
Query OK, 0 rows affected (0.038 sec)
3.DELIMITER $$
CREATE PROCEDURE kategori_harga(harga INT)
BEGIN
    DECLARE kategori VARCHAR(20);
    IF harga >= 0 AND harga <= 500000 THEN
        SET kategori = 'Murah';
    ELSEIF harga > 500000 AND harga <= 3000000 THEN
        SET kategori = 'Sedang';
    ELSEIF harga > 3000000 AND harga <= 10000000 THEN
        SET kategori = 'Mahal';
    ELSE
        SET kategori = 'Sangat Mahal';
    END IF;
    SELECT kategori AS 'Kategori Harga';
END $$
DELIMITER ;

6.2
1.SELECT * FROM pesanan;
2.DELIMITER $$
CREATE TRIGGER cek_pembayaran BEFORE INSERT ON pembayaran
FOR EACH ROW
BEGIN
DECLARE total_bayar DECIMAL(10, 2);
DECLARE total_pesanan DECIMAL(10, 2);
SELECT SUM(jumlah) INTO total_bayar FROM pembayaran WHERE pesanan_id = NEW.pesanan_id;
SELECT total INTO total_pesanan FROM pesanan WHERE id = NEW.pesanan_id;
3.IF total_bayar + NEW.jumlah >= total_pesanan THEN
SET NEW.status_pembayaran = 'Lunas';
END IF;
END $$
DELIMITER ;
INSERT INTO pembayaran (no_kuitansi, tanggal, jumlah, ke, pesanan_id, status_pembayaran)
VALUES ('KWI001', '2023-03-03', 200000, 1, 1);
5.DELIMITER $$
CREATE PROCEDURE kurangi_stok(IN produk_id INT, IN jumlah_pesanan INT)
BEGIN
  DECLARE stok_produk INT;
  
  -- Dapatkan jumlah stok produk saat ini
  SELECT stok INTO stok_produk FROM produk WHERE id = produk_id;
  
  -- Kurangi stok dengan jumlah pesanan
  SET stok_produk = stok_produk - jumlah_pesanan;
  
  -- Pastikan stok tidak negatif
  IF stok_produk < 0 THEN
    SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = 'Stok produk tidak mencukupi';
  END IF;
  
  -- Update stok produk yang telah dikurangi
  UPDATE produk SET stok = stok_produk WHERE id = produk_id;
END $$
DELIMITER ;
6.DELIMITER $$
CREATE TRIGGER trig_kurangi_stok AFTER INSERT ON pesanan_items
FOR EACH ROW
BEGIN
  -- Memanggil stored procedure kurangi_stok untuk mengurangi stok produk
  CALL kurangi_stok(NEW.produk_id, NEW.qty);
END $$
DELIMITER ;

SELECT * FROM `produk`

INSERT INTO pesanan_items (produk_id, pesanan_id, qty, harga) VALUES 
(7, 3, 2, 7000)

SELECT * FROM `produk`;


